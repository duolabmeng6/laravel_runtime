name: Build and Push Docker Images

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    # 每周日凌晨2点UTC时间执行（北京时间周日上午10点）
    - cron: '0 2 * * 0'

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
    - name: Before freeing up disk space
      run: |
        echo "Before freeing up disk space"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    # 增加可用磁盘空间
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 2048
        swap-size-mb: 128
        remove-dotnet: 'true'
        remove-haskell: 'true'
        # 如果空间还是不够用，可以把以下开启，清理出更多空间
        # remove-android: 'true'
        # remove-codeql: 'true'
        build-mount-path: '/var/lib/docker/'

    - name: Restart docker
      run: sudo service docker restart

    - name: Free up disk space complete
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Aliyun Registry
      run: |
        docker login -u $ALIYUN_REGISTRY_USER -p $ALIYUN_REGISTRY_PASSWORD $ALIYUN_REGISTRY

    - name: Find and build Docker images
      run: |
        echo "开始构建 mydocker 目录下的 Docker 镜像"
        echo "ALIYUN_REGISTRY: $ALIYUN_REGISTRY"
        echo "ALIYUN_NAME_SPACE: $ALIYUN_NAME_SPACE"
        
        # 遍历 mydocker 目录下的所有子目录
        for dir in mydocker/*/; do
          if [ -d "$dir" ]; then
            # 检查是否有 dockerfile 文件（不区分大小写）
            if [ -f "${dir}dockerfile" ] || [ -f "${dir}Dockerfile" ]; then
              # 获取目录名作为镜像名
              image_name=$(basename "$dir")
              echo "发现镜像目录: $dir"
              echo "构建镜像: $image_name"
              
              # 进入目录构建镜像
              cd "$dir"
              
              # 构建镜像（确保格式正确）
              full_image_name="$ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$image_name:latest"
              echo "正在构建镜像: $full_image_name"
              docker build -t $full_image_name .
              
              # 推送镜像
              echo "正在推送镜像: $full_image_name"
              docker push $full_image_name
              
              echo "镜像 $image_name 构建并推送完成"
              echo "----------------------------------------"
              
              # 返回根目录
              cd ../../
            else
              echo "目录 $dir 中没有找到 dockerfile 文件，跳过"
            fi
          fi
        done
        
        echo "所有 mydocker 目录下的镜像构建完成"